# Base image
FROM kalilinux/kali-rolling

# Set environment variables
ENV DEBIAN_FRONTEND noninteractive
ENV TERM xterm-256color

# Do APT update and system upgrade
RUN apt-get -y update --fix-missing && apt-get -y dist-upgrade && apt-get -y autoremove && apt-get clean

# Install system essentials, networking, and security tools
RUN apt-get install -y \
    build-essential \
    curl \
    file \
    git \
    openvpn \
    bridge-utils \
    net-tools \
    seclists \
    metasploit-framework \
    nmap \
    zsh \
    tmux \
    neovim \
    libpcap-dev \
    libcurl4-openssl-dev \
    sudo \
    ruby-full \
    python3-pip \
    golang
    # kali-linux-nethunter \
# Create a new user 'cybertech' and add to sudoers
RUN adduser --quiet --disabled-password --shell /bin/bash --home /home/cybertech --gecos "User" cybertech \
    && echo "cybertech:password" | chpasswd \
    && usermod -aG sudo cybertech

# Set Zsh as the default shell for the new user
RUN chsh -s $(which zsh) cybertech

# Copy necessary VPN and tunneling files (OVPN config and tunnel script) and set permissions
# COPY *.ovpn /home/cybertech/
COPY enable-tunnel.sh /home/cybertech/
COPY .tmux.conf /home/cybertech/.tmux.conf

# Make the tunnel script executable
RUN chmod +x /home/cybertech/enable-tunnel.sh


# Switch to new user
USER cybertech
WORKDIR /home/cybertech

ENV GEM_HOME="/home/cybertech/gems"
ENV PATH="$GEM_HOME/bin:$PATH"

# Install WPScan and set up tools
RUN  gem install wpscan

# Clone custom Neovim configuration from your GitHub repo
RUN git clone https://github.com/Hadiasemi/hadi-kickstart.nvim.git "${XDG_CONFIG_HOME:-$HOME/.config}"/nvim


# Install Go and related tools
# RUN curl -s https://go.dev/dl/ | grep linux-amd64 | grep -Eo 'go[0-9.]+.linux-amd64.tar.gz' | head -n 1 | xargs -I {} curl -OL https://go.dev/dl/{} \
    # && tar -C /usr/local -xzf go*.linux-amd64.tar.gz \
    # && rm go*.linux-amd64.tar.gz

# Set Go environment variables
ENV PATH /usr/local/go/bin:$PATH
ENV GOPATH /home/cybertech/go

# Add Go paths to .zshrc for persistent Go environment setup
RUN echo 'export GOPATH=$HOME/go' >> /home/cybertech/.zshrc \
    && echo 'export PATH=$PATH:/usr/local/go/bin:$GOPATH/bin' >> /home/cybertech/.zshrc

# Install Go-based tools (httpx, subfinder, katana, notify, naabu, asnmap, alterx)
RUN go install github.com/projectdiscovery/httpx/cmd/httpx@latest \
    && go install github.com/projectdiscovery/subfinder/v2/cmd/subfinder@latest \
    && go install github.com/projectdiscovery/katana/cmd/katana@latest \
    && go install github.com/projectdiscovery/notify/cmd/notify@latest \
    && go install -v github.com/projectdiscovery/naabu/v2/cmd/naabu@latest \
    && go install github.com/projectdiscovery/asnmap/cmd/asnmap@latest \
    && go install github.com/projectdiscovery/alterx/cmd/alterx@latest


RUN git clone https://github.com/expl0itabl3/check_mdi.git /home/cybertech/check_mdi \
    && cd /home/cybertech/check_mdi \
    && pip3 install -r requirements.txt --break-system-packages 


# Set entrypoint to bash by default
ENTRYPOINT ["/bin/zsh"]

